from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

async def get_settings_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∫–Ω–æ–ø–∫–æ–π —è–∑—ã–∫–∞.

    :param lang: –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('ru' –∏–ª–∏ 'en').
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    """
    if lang == 'ru':
        language_button_text = "–Ø–∑—ã–∫: üá∑üá∫ –†—É—Å—Å–∫–∏–π"
        hide_button_text = "–°–∫—Ä—ã—Ç—å"
    else:
        language_button_text = "Language: üá¨üáß English"
        hide_button_text = "Hide"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=language_button_text, callback_data="change_language"),
            ],
            [
                InlineKeyboardButton(text=hide_button_text, callback_data="hide")
            ]
        ]
    )
    return keyboard


async def get_choose_model_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏.

    :param lang: –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('ru' –∏–ª–∏ 'en').
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏.
    """
    if lang == 'ru':
        gpt4o_text = "üöÄ GPT4o"
        scenary_text = "üëæ –°—Ü–µ–Ω–∞—Ä–Ω—ã–π"
        llama3_text = "ü¶ô Llama3"
        hide_text = "–°–∫—Ä—ã—Ç—å"
    else:
        gpt4o_text = "üöÄ GPT4o"
        scenary_text = "üëæ Scenary"
        llama3_text = "ü¶ô Llama3"
        hide_text = "Hide"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=gpt4o_text, callback_data="choice_gpt4o"),
                InlineKeyboardButton(text=llama3_text, callback_data="choice_llama3"),
                InlineKeyboardButton(text=scenary_text, callback_data="choice_scenary"),

            ],
            [
                InlineKeyboardButton(text=hide_text, callback_data="hide")
            ]
        ]
    )
    return keyboard


async def get_approve_gpt4o_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ GPT4o.

    :param lang: –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('ru' –∏–ª–∏ 'en').
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    if lang == 'ru':
        yes_text = "‚úÖ –î–∞"
        no_text = "‚ùå –ù–µ—Ç"
    else:
        yes_text = "‚úÖ Yes"
        no_text = "‚ùå No"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=yes_text, callback_data="approve_gpt4o"),
                InlineKeyboardButton(text=no_text, callback_data="refuse")
            ]
        ]
    )
    return keyboard


async def get_approve_llama3_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ Llama3.

    :param lang: –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('ru' –∏–ª–∏ 'en').
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    if lang == 'ru':
        yes_text = "‚úÖ –î–∞"
        no_text = "‚ùå –ù–µ—Ç"
    else:
        yes_text = "‚úÖ Yes"
        no_text = "‚ùå No"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=yes_text, callback_data="approve_llama3"),
                InlineKeyboardButton(text=no_text, callback_data="refuse")
            ]
        ]
    )
    return keyboard

async def get_approve_scenary_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ –°—Ü–µ–Ω–∞—Ä–Ω—ã–π.

    :param lang: –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('ru' –∏–ª–∏ 'en').
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    if lang == 'ru':
        yes_text = "‚úÖ –î–∞"
        no_text = "‚ùå –ù–µ—Ç"
    else:
        yes_text = "‚úÖ Yes"
        no_text = "‚ùå No"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=yes_text, callback_data="approve_scenary"),
                InlineKeyboardButton(text=no_text, callback_data="hide")
            ]
        ]
    )
    return keyboard


async def get_hide_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è.

    :param lang: –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ('ru' –∏–ª–∏ 'en').
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã.
    """
    if lang == 'ru':
        hide_text = "–°–∫—Ä—ã—Ç—å"
    else:
        hide_text = "Hide"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=hide_text, callback_data="hide")
            ]
        ]
    )
    return keyboard
